"""
add_usersshow_with_birthdate_view

Revision ID: 7ca2054f4d4c
Revises: dec3ff6708c0
Create Date: 2025-05-03 00:27:52.500750

"""
from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '7ca2054f4d4c'
down_revision: str | None = 'dec3ff6708c0'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


if not sqlmodel.sql:
    raise Exception('Something went wrong')


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('usersshow_with_birthdate',
    sa.Column('idusers', sa.Integer(), nullable=True),
    sa.Column('login', sa.String(length=250), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('full_name', sa.Text(), nullable=True),
    sa.Column('idroles', sa.Integer(), nullable=True),
    sa.Column('user_role', sa.String(length=25), nullable=True),
    schema='public'
    )
    op.create_table('scheduleshow',
    sa.Column('idschedule', sa.Integer(), nullable=True),
    sa.Column('time', sa.Time(timezone=True), nullable=True),
    sa.Column('subject_name', sa.String(length=45), nullable=True),
    sa.Column('teacher', sa.String(length=45), nullable=True),
    sa.Column('cabinet', sa.Integer(), nullable=True),
    sa.Column('group_nam', sa.String(length=45), nullable=True),
    sa.Column('day_of_week', sa.Text(), nullable=True)
    )
    op.create_table('subjects_with_types',
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('subject_name', sa.String(length=45), nullable=True),
    sa.Column('description', sa.String(length=150), nullable=True),
    sa.Column('types', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('subject_id')
    )
    op.create_table('subjectsshow',
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('subject_name', sa.String(length=45), nullable=True),
    sa.Column('description', sa.String(length=150), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('type_name', sa.String(length=45), nullable=True)
    )
    op.create_table('usersshow',
    sa.Column('idusers', sa.Integer(), nullable=True),
    sa.Column('login', sa.String(length=25), nullable=True),
    sa.Column('password', sa.String(length=25), nullable=True),
    sa.Column('full_name', sa.Text(), nullable=True),
    sa.Column('idroles', sa.Integer(), nullable=True),
    sa.Column('user_role', sa.String(length=25), nullable=True)
    )
    op.drop_table('__EFMigrationsHistory')
    op.drop_index('idx_attendance_date', table_name='attendance')
    op.drop_index('idx_attendance_schedule', table_name='attendance')
    op.drop_index('idx_bil_nebil_user', table_name='bil_nebil')
    op.alter_column('roles', 'name',
               existing_type=sa.VARCHAR(length=25),
               nullable=False)
    op.alter_column('schedule', 'time',
               existing_type=postgresql.TIME(),
               type_=sa.Time(timezone=True),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('schedule', 'time',
               existing_type=sa.Time(timezone=True),
               type_=postgresql.TIME(),
               existing_nullable=False)
    op.alter_column('roles', 'name',
               existing_type=sa.VARCHAR(length=25),
               nullable=True)
    op.create_index('idx_bil_nebil_user', 'bil_nebil', ['iduser'], unique=False)
    op.create_index('idx_attendance_schedule', 'attendance', ['idschedule'], unique=False)
    op.create_index('idx_attendance_date', 'attendance', ['date'], unique=False)
    op.create_table('__EFMigrationsHistory',
    sa.Column('MigrationId', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('ProductVersion', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('MigrationId', name='PK___EFMigrationsHistory')
    )
    op.drop_table('usersshow')
    op.drop_table('subjectsshow')
    op.drop_table('subjects_with_types')
    op.drop_table('scheduleshow')
    op.drop_table('usersshow_with_birthdate', schema='public')
    # ### end Alembic commands ###
