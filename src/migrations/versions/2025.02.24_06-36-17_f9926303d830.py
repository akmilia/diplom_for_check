"""
empty message

Revision ID: f9926303d830
Revises:
Create Date: 2025-02-24 06:36:17.871198

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'f9926303d830'
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


if not sqlmodel.sql:
    raise Exception('Something went wrong')


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'cabinet',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
    )
    op.create_table(
        'group',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=25), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
    )
    op.create_table(
        'role',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=25), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
    )
    op.create_table(
        'schedule',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('dateandtime', sa.DateTime(), nullable=False),
        sa.Column('weakday', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
    )
    op.create_table(
        'subject',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column('type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
    )
    op.create_table(
        'schedule_cabinet',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('schedule_id', sa.Integer(), nullable=False),
        sa.Column('cabinet_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['cabinet_id'],
            ['cabinet.id'],
        ),
        sa.ForeignKeyConstraint(
            ['schedule_id'],
            ['schedule.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
    )
    op.create_table(
        'schedule_subject',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('schedule_id', sa.Integer(), nullable=False),
        sa.Column('subject_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['schedule_id'],
            ['schedule.id'],
        ),
        sa.ForeignKeyConstraint(
            ['subject_id'],
            ['subject.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
    )
    op.create_table(
        'user',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('surname', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=False),
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=False),
        sa.Column('paternity', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
        sa.Column('gender', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
        sa.Column('birthdate', sa.DateTime(), nullable=True),
        sa.Column('login', sqlmodel.sql.sqltypes.AutoString(length=25), nullable=False),
        sa.Column('password', sqlmodel.sql.sqltypes.AutoString(length=25), nullable=False),
        sa.Column('role_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['role_id'],
            ['role.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
        sa.UniqueConstraint('login'),
    )
    op.create_table(
        'schedule_user',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('schedule_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['schedule_id'],
            ['schedule.id'],
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['user.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
    )
    op.create_table(
        'user_group',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('group_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['group_id'],
            ['group.id'],
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['user.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
    )

    roles_table = sa.table(
        'role',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=25), nullable=False),
    )

    op.bulk_insert(
        roles_table,
        [{'id': 1, 'name': 'admin'}, {'id': 2, 'name': 'teacher'}, {'id': 3, 'name': 'student'}],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_group')
    op.drop_table('schedule_user')
    op.drop_table('user')
    op.drop_table('schedule_subject')
    op.drop_table('schedule_cabinet')
    op.drop_table('subject')
    op.drop_table('schedule')
    op.drop_table('role')
    op.drop_table('group')
    op.drop_table('cabinet')
    # ### end Alembic commands ###
